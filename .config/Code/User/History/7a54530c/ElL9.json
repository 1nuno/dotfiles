//Place your key bindings in this file to override the defaults
[
    // Terminal
    {
        "key": "ctrl+;",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+'",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+.",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+,",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    // Editor
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeActiveEditor",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.closeEditorsInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+space h",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+space l",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+space j",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+space k",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.navigateBackInNavigationLocations"
    },
    {
        "key": "ctrl+space \\",
        "command": "workbench.action.toggleSplitEditorInGroup"
    },
    {
        "key": "ctrl+/",
        "command": "workbench.action.splitEditorDown",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+\\",
        "command": "workbench.action.splitEditor",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen",
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen",
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+\\",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+space \\",
        "command": "workbench.action.terminal.unsplit",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+9",
        "command": "workbench.action.decreaseViewSize"
    },
    {
        "key": "ctrl+shift+0",
        "command": "workbench.action.increaseViewSize"
    },
    {
        "key": "ctrl+space t",
        "command": "workbench.action.hideEditorTabs",
        "when": "editorTabsVisible"
    },
    {
        "key": "ctrl+space t",
        "command": "workbench.action.showMultipleEditorTabs",
        "when": "!editorTabsVisible"
    },

    // File Explorer
    {
        "key": "ctrl+n",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "command": "workbench.files.action.focusFilesExplorer",
        "key": "ctrl+n",
        "when": "editorTextFocus || !editorIsOpen || filesExplorerFocus"
    },
    {
        "key": "n",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "command": "renameFile",
        "key": "r",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+n",
        "command": "explorer.newFolder",
        "when": "explorerViewletFocus"
    },
    {
        "command": "deleteFile",
        "key": "d",
        "when": "filesExplorerFocus && !inputFocus"
    },
    // General
    {
        "key": "ctrl+8",
        "command": "workbench.action.openSettings"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.showAllEditors"
    },
    {
        "key": "ctrl+space p",
        "command": "workbench.action.quickOpen"
    },
    // Disable system shortcuts;
    {
        "key": "shift+f3",
        "command": "-workbench.action.terminal.findPrevious",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "shift+enter",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+.",
        "command": "-workbench.action.terminal.showQuickFixes",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+p",
        "command": "-extension.vim_ctrl+p",
        "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+k ctrl+p",
        "command": "-workbench.action.showAllEditors"
    },
    {
        "key": "ctrl+shift+;",
        "command": "-breadcrumbs.focus",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "ctrl+; c",
        "command": "-jupyter.changeCellToCode",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
    },
    {
        "key": "ctrl+; m",
        "command": "-jupyter.changeCellToMarkdown",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
    },
    {
        "key": "ctrl+; x",
        "command": "-jupyter.deleteCells",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
    },
    {
        "key": "ctrl+; a",
        "command": "-jupyter.insertCellAbove",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
    },
    {
        "key": "ctrl+; b",
        "command": "-jupyter.insertCellBelow",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
    },
    {
        "key": "ctrl+; s",
        "command": "-jupyter.insertCellBelowPosition",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
    },
    {
        "key": "ctrl+; d",
        "command": "-jupyter.moveCellsDown",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
    },
    {
        "key": "ctrl+; u",
        "command": "-jupyter.moveCellsUp",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
    },
    {
        "key": "ctrl+; ctrl+a",
        "command": "-testing.debugAll"
    },
    {
        "key": "ctrl+; ctrl+e",
        "command": "-testing.debugFailTests"
    },
    {
        "key": "ctrl+; ctrl+l",
        "command": "-testing.debugLastRun"
    },
    {
        "key": "ctrl+; ctrl+c",
        "command": "-testing.debugAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+f",
        "command": "-testing.debugCurrentFile",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+m",
        "command": "-testing.openOutputPeek"
    },
    {
        "key": "ctrl+; ctrl+r",
        "command": "-testing.refreshTests",
        "when": "testing.canRefresh"
    },
    {
        "key": "ctrl+; e",
        "command": "-testing.reRunFailTests"
    },
    {
        "key": "ctrl+; l",
        "command": "-testing.reRunLastRun"
    },
    {
        "key": "ctrl+; a",
        "command": "-testing.runAll"
    },
    {
        "key": "ctrl+; c",
        "command": "-testing.runAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; f",
        "command": "-testing.runCurrentFile",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+o",
        "command": "-testing.showMostRecentOutput",
        "when": "testing.hasAnyResults"
    },
    {
        "key": "ctrl+; ctrl+i",
        "command": "-testing.toggleInlineTestOutput"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quit"
    },
    {
        "key": "ctrl+k ctrl+q",
        "command": "-workbench.action.navigateToLastEditLocation"
    },
    {
        "key": "ctrl+; ctrl+x",
        "command": "-testing.cancelRun"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+[",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+.",
        "command": "-acceptSelectedCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+.",
        "command": "-editor.changeDropType",
        "when": "dropWidgetVisible"
    },
    {
        "key": "ctrl+.",
        "command": "-editor.changePasteType",
        "when": "pasteWidgetVisible"
    },
    {
        "key": "ctrl+.",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+.",
        "command": "-problems.action.showQuickFixes",
        "when": "problemFocus"
    },
    {
        "key": "ctrl+8",
        "command": "-workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "ctrl+,",
        "command": "-workbench.action.openSettings"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "-editor.action.defineKeybinding",
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+alt+-",
        "command": "-workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+shift+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "-notebook.cell.split",
        "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-notebook.cell.split",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputInputFocused"
    },
    {
        "key": "ctrl+/",
        "command": "-toggleExplainMode",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+/",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+/",
        "command": "-editor.action.accessibleViewAcceptInlineCompletion",
        "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions'"
    },
    {
        "key": "ctrl+/",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+shift+\\",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+\\",
        "command": "-workbench.action.terminal.focusTabs",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorUp"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorLeft"
    },
    {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "-workbench.action.splitEditorInGroup",
        "when": "activeEditorCanSplitInGroup"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+alt+meta+n",
        "command": "-welcome.showNewFileEntries"
    }
]