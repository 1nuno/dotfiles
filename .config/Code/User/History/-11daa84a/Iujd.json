// Place your key bindings in this file to override the defaults
[
  {
  "key": "ctrl+shift+w",
  "command": "workbench.action.closeActiveEditor"
  },
  {
  "key": "ctrl+j",
  "command": "terminal.focus"
  },
  {
  "key": "ctrl+;",
  "command": "workbench.action.focusActiveEditorGroup",
  "when": "terminalFocus"
  },
  // NAVIGATION
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"},
  {
    "key": "shift+ctrl+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  // FILE TREE
  {
    "command": "runCommands",
    "key": "ctrl+y",
    "args": {
      "commands": [
        // commands to run in sequence
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.focusSideBar",
      ]
    },
    "when": "!sideBarVisible"
  },
  {
    "key": "ctrl+;",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "sideBarFocus" 
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusSideBar",
      "when": "sideBarVisible && (editorFocus || terminalFocus)" 
  },  
 {
    "key": "ctrl+y",
    "command": "workbench.action.closeSidebar",
    "when": "sideBarVisible" 
  }, 
  {
  "key": "shift+y",
  "command": "workbench.action.focusActiveEditorGroup",
  "when": "filesExplorerFocus"
  },
  {
    "key": "n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+n",
    "command": "explorer.newFolder",
    "when": "explorerViewletFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+shift+;",
    "command": "-breadcrumbs.focus",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.previousEditorInGroup"
  },
 {
  "key": "shift+enter",
  "command": "python.execInTerminal-icon",
  "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
},
{
  "key": "ctrl+u",
  "command": "workbench.action.terminal.resizePaneUp",
  "when": "terminalFocus"
},
{
  "key": "ctrl+d",
  "command": "workbench.action.terminal.resizePaneDown",
  "when": "terminalFocus"
},
{
  "key": "ctrl+shift+y",
  "command": "-workbench.debug.action.toggleRepl",
  "when": "workbench.panel.repl.view.active"
},
{
  "key": "ctrl+h",
  "command": "-editor.action.startFindReplaceAction",
  "when": "editorFocus || editorIsOpen"
},
{
  "key": "ctrl+w",
  "command": "-workbench.action.terminal.killEditor",
  "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
},
{
  "key": "ctrl+w",
  "command": "-extension.vim_ctrl+w",
  "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
},
{
  "key": "ctrl+w",
  "command": "-workbench.action.closeGroup",
  "when": "activeEditorGroupEmpty && multipleEditorGroups"
}

]