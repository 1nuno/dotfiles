------------------------------------
MVP 2 - isolate the networks
------------------------------------


MariaDB

    CONTAINER:

        *2* Connect to the "mariadb-network" network;
        - The DB "sic" with a table "sic" is created automatically when the container is created. the table has the following columns:
          id(primary key),value(varchar);
        - Make use of a custom Dockerfile to setup the MariaDB environment.




PHPMYADMIN

    CONTAINER:

        *2* Connect to the "mariadb-network" network;
        - Make use of a custom Dockerfile to setup the PHPMYADMIN environment.




RabbitMQ

    CONTAINER:

        *2* Connect to the "rabbitmq-network" network;
        - Make use of a custom Dockerfile to setup the RabbitMQ environment:

            - Turn on the MQTT plugin.




TOKEN GENERATOR (app_pub.py)

    SCRIPT:

        - Connect to the MQTT broker;
        * Generate a "hello world" one single time;
        - Publish it to the channel /sic/tokens.

    CONTAINER:

        *2* Connect to the "rabbitmq-network" network;
        - Make use of a custom Dockerfile to setup the python (development) environment:

            - paho MQTT (library);





TOKEN PROCESSING (app_sub.py)

    SCRIPT:

    - Connect to the MQTT broker;
    - Subscribe to the MQTT channel /sic/tokens;
    - Connect to the MariaDB, more specifically to a DB called "sic";
    - Insert the data received from the MQTT channel into the the sic table;

    CONTAINER:

        *2* Connect to the "rabbitmq-network" AND "mariadb-network" networks;
        - Make use of a custom Dockerfile to setup the python (development) environment:

            - mysql connector (library);
            - paho MQTT (library);
