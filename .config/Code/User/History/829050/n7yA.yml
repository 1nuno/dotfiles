version: "3.8"
services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    restart: on-failure
    networks:
      - kafka-net
    volumes:
      - zookeeper-data:/bitnami/zookeeper
    environment: 
      ALLOW_ANONYMOUS_LOGIN: yes

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    restart: on-failure
    networks:
      - kafka-net
    environment: 
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://172.16.140.128:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT

  producer:
    build: ./producerN
    image: temp1
    container_name: producer
    restart: on-failure
    networks:
      - kafka-net
    depends_on:
      kafka:
        condition: service_started

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports: 
      - "8086:8086"
    volumes:
      - influx-data:/var/lib/influxdb
    networks:
      - tick-network
    environment: 
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: password
      DOCKER_INFLUXDB_INIT_ORG: sic
      DOCKER_INFLUXDB_INIT_BUCKET: tp2
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: LRk4Qb4QtnFqdn83kYDG-1EXsNRkhFGrdZqJQhfy2IOTN7IIyVhWdwEu8PeKlvhXDHomucMZVOpE7tAPLSx0xQ==

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    volumes:
     - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
    networks:
     - tick-network
    depends_on:
     - influxdb

volumes:
  influx-data:
    name: influx-data
    driver: local

networks:
  kafka-net:
    name: kafka-net
  tick-net:
    name: tick-net